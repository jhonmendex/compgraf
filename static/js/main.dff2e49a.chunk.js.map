{"version":3,"sources":["logo.svg","components/header/header.js","components/examples/examples.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","header","id","class","href","title","Component","examples","style","padding","background","className","target","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sJAAAA,EAAOC,QAAU,IAA0B,kC,iJCCtBC,E,iLAEf,OACH,4BAAQC,GAAG,QAER,yBAAKA,GAAG,YAEL,uBAAGC,MAAM,aAAaC,KAAK,YAAYC,MAAM,mBAA7C,mBACF,uBAAGF,MAAM,aAAaC,KAAK,IAAIC,MAAM,mBAArC,mBAEE,wBAAIH,GAAG,MAAMC,MAAM,OAChB,wBAAIA,MAAM,WAAU,uBAAGA,MAAM,eAAeC,KAAK,SAA7B,SACtB,4BAAI,uBAAGD,MAAM,eAAeC,KAAK,aAA7B,eAKR,yBAAKD,MAAM,cACR,yBAAKA,MAAM,eACR,wBAAIA,MAAM,uBAAV,+BAQN,uBAAGA,MAAM,cACN,uBAAGA,MAAM,eAAeC,KAAK,WAAU,uBAAGD,MAAM,4B,GA5BrBG,aCCfC,E,iLAMjB,OACE,6BAASL,GAAG,WAAWM,MALZ,CACXC,QAAS,cACTC,WAAY,SAIV,yBAAKC,UAAU,OACb,mDACsB,gCAEtB,yBAAKR,MAAM,QACT,oCACA,2BAAOA,MAAM,yBACX,+BACE,4BACE,sCACA,oCACA,wCACA,4CAEF,4BACE,kCACA,4DACA,4BACE,uBACEC,KAAK,4EACLQ,OAAO,SAFT,uBAMA,6BAEA,uBACER,KAAK,iDACLQ,OAAO,SAFT,sBAOF,uC,GAzCoBN,aCavBO,MATf,WACE,OACF,yBAAKF,UAAU,OACP,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEYG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.dff2e49a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from  'react'\nexport default class header extends Component {\n    render() {\n      return (\n   <header id=\"home\">\n\n      <nav id=\"nav-wrap\">\n\n         <a class=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n\t      <a class=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n\n         <ul id=\"nav\" class=\"nav\">\n            <li class=\"current\"><a class=\"smoothscroll\" href=\"#home\">Home</a></li>\n\t         <li><a class=\"smoothscroll\" href=\"#examples\">Examples</a></li>\n         </ul> \n\n      </nav> \n\n      <div class=\"row banner\">\n         <div class=\"banner-text\">\n            <h1 class=\"responsive-headline\">Computación gráfica</h1>\n            {/* <h3> <span>graphic designer</span>, <span>illustrator</span> and <span>webdesigner</span> creating awesome and\n            effective visual identities for companies of all sizes around the globe. Let's <a class=\"smoothscroll\" href=\"#about\">start scrolling</a>\n            and learn more <a class=\"smoothscroll\" href=\"#about\">about me</a>.</h3>\n            <hr /> */}\n         </div>\n      </div>\n\n      <p class=\"scrolldown\">\n         <a class=\"smoothscroll\" href=\"#styles\"><i class=\"icon-down-circle\"></i></a>\n      </p>\n   </header> \n      )\n    }\n  }","import React, { Component } from \"react\";\n\nexport default class examples extends Component {\n  render() {\n    let styles = {\n      padding: \"90px 0 72px\",\n      background: \"#fff\",\n    };\n    return (\n      <section id=\"examples\" style={styles}>\n        <div className=\"row\">\n          <h2>\n            Calendario del curso<span></span>\n          </h2>\n          <div class=\"lead\">\n            <small> </small>\n            <table class=\"table table-condensed\">\n              <tbody>\n                <tr>\n                  <th>Semana</th>\n                  <th>Tema</th>\n                  <th>Material</th>\n                  <th>Actividades</th>\n                </tr>\n                <tr>\n                  <td> 3</td>\n                  <td>Texturas y modelos Three.js </td>\n                  <td>\n                    <a\n                      href=\"https://threejsfundamentals.org/threejs/lessons/threejs-fundamentals.html\"\n                      target=\"blank\"\n                    >\n                      Fundamentos Threejs\n                    </a>\n                    <br />\n\n                    <a\n                      href=\"https://jhonmendex.github.io/Threejs_HolaMundo\"\n                      target=\"blank\"\n                    >\n                      Ejemplo planetass\n                    </a>\n                  </td>\n                  <td></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/header/header';\nimport Examples from './components/examples/examples';\n\nfunction App() {\n  return (\n<div className=\"App\">\n        <Header />\n        <Examples />\n      </div>\n  );\n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}